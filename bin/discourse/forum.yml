## this is the all-in-one, standalone Discourse Docker container template
##
## After making changes to this file, you MUST rebuild
## /var/discourse/launcher rebuild forum
##
## BE *VERY* CAREFUL WHEN EDITING!
## YAML FILES ARE SUPER SUPER SENSITIVE TO MISTAKES IN WHITESPACE OR ALIGNMENT!
## visit http://www.yamllint.com/ to validate this file as needed

templates:
  - "templates/postgres.template.yml"
  - "templates/redis.template.yml"
  - "templates/web.template.yml"
  - "templates/web.ratelimited.template.yml"
## Uncomment these two lines if you wish to add Lets Encrypt (https)
#  - "templates/web.ssl.template.yml"
#  - "templates/web.letsencrypt.ssl.template.yml"

## which TCP/IP ports should this container expose?
## If you want Discourse to share a port with another webserver like Apache or nginx,
## see https://meta.discourse.org/t/17247 for details

# expose:
# - "80:80"   # http
# - "443:443" # https
# - "5432:5432" # Postgres

labels:
  traefik.enable: true
  # traefik.port: '80'
  # traefik.backend: 'forum'
  # traefik.frontend.rule: '@TRAFIK_1.7_HOSTS@'
  # traefik.docker.network: 'traefik'

  traefik.http.routers.forum.rule: @TRAFIK_3.57_HOSTS@
  traefik.http.routers.forum.entrypoints: websecure
  traefik.http.routers.forum.tls: true
  traefik.http.services.forum.loadbalancer.server.port: 80

docker_args:
  - "--network=traefik @NETWORK_ALIASES@"

params:
  db_default_text_search_config: "pg_catalog.english"

  ## Set db_shared_buffers to a max of 25% of the total memory.
  ## will be set automatically by bootstrap based on detected RAM, or you can override
  db_shared_buffers: "4000MB"

  ## can improve sorting performance, but adds memory usage per-connection
  #db_work_mem: "40MB"

  ## Which Git revision should this container use? (default: tests-passed)
  #version: tests-passed

env:
  LANG: en_US.UTF-8
  # DISCOURSE_DEFAULT_LOCALE: en

  ## How many concurrent web requests are supported? Depends on memory and CPU cores.
  ## will be set automatically by bootstrap based on detected CPUs, or you can override
  UNICORN_WORKERS: 4

  ## TODO: The domain name this Discourse instance will respond to
  ## Required. Discourse will not work with a bare IP number.
  DISCOURSE_HOSTNAME: @DISCOURSE_HOSTNAME@

  ## Uncomment if you want the container to be started with the same
  ## hostname (-h option) as specified above (default "$hostname-$config")
  #DOCKER_USE_HOSTNAME: true

  ## TODO: List of comma delimited emails that will be made admin and developer
  ## on initial signup example 'user1@example.com,user2@example.com'
  DISCOURSE_DEVELOPER_EMAILS: 'hosting@tripleperformance.fr'

  ## TODO: The SMTP mail server used to validate new accounts and send notifications
  # SMTP ADDRESS, username, and password are required
  # WARNING the char '#' in SMTP password can cause problems!
  DISCOURSE_SMTP_ADDRESS: @DISCOURSE_SMTP_ADDRESS@
  DISCOURSE_SMTP_PORT: @DISCOURSE_SMTP_PORT@
  DISCOURSE_SMTP_USER_NAME: @DISCOURSE_SMTP_USER_NAME@
  DISCOURSE_SMTP_PASSWORD: @DISCOURSE_SMTP_PASSWORD@
  #DISCOURSE_SMTP_ENABLE_START_TLS: true           # (optional, default true)
  #DISCOURSE_SMTP_DOMAIN: discourse.example.com    # (required by some providers)

  ## If you added the Lets Encrypt template, uncomment below to get a free SSL certificate
  # LETSENCRYPT_ACCOUNT_EMAIL: me@example.com

  ## The http or https CDN address for this Discourse instance (configured to pull)
  ## see https://meta.discourse.org/t/14857 for details
  #DISCOURSE_CDN_URL: https://discourse-cdn.example.com

  ## The maxmind geolocation IP address key for IP address lookup
  ## see https://meta.discourse.org/t/-/137387/23 for details
  DISCOURSE_MAXMIND_LICENSE_KEY: @DISCOURSE_MAXMIND_LICENSE_KEY@

  # Neayi: Increase the number of requests per minutes for the API
  DISCOURSE_MAX_ADMIN_API_REQS_PER_MINUTE: 5000
  DISCOURSE_MAX_REQS_PER_IP_PER_MINUTE : 1000
  DISCOURSE_MAX_REQS_PER_IP_PER_10_SECONDS : 500

  DISCOURSE_MAX_USER_API_REQS_PER_MINUTE: 5000
  DISCOURSE_MAX_USER_API_REQS_PER_DAY: 5000
  DISCOURSE_MAX_REQS_PER_IP_MODE: none
  DISCOURSE_MAX_REQS_PER_IP_PER_10_SECONDS: 500

  DISCOURSE_ENABLE_CORS: true
  # DISCOURSE_CORS_ORIGIN: '*'

## The Docker container is stateless; all data is stored in /shared
volumes:
  - volume:
      host: /var/www/discourse/shared/standalone
      guest: /shared
  - volume:
      host: /var/www/discourse/shared/standalone/log/var-log
      guest: /var/log

## Plugins go here
## see https://meta.discourse.org/t/19157 for details
hooks:
  after_postgres:
     - exec: sudo -u postgres createdb en_discourse || exit 0
     - exec:
          stdin: |
            grant all privileges on database en_discourse to discourse;
          cmd: sudo -u postgres psql en_discourse
          raise_on_fail: false

     - exec: /bin/bash -c 'sudo -u postgres psql en_discourse <<< "alter schema public owner to discourse;"'
     - exec: /bin/bash -c 'sudo -u postgres psql en_discourse <<< "create extension if not exists hstore;"'
     - exec: /bin/bash -c 'sudo -u postgres psql en_discourse <<< "create extension if not exists pg_trgm;"'

  after_code:
    - exec:
        cd: $home/plugins
        cmd:
          - mkdir -p plugins
          - git clone https://github.com/discourse/docker_manager.git
          - git clone https://github.com/discourse/discourse-perspective-api
          - git clone https://github.com/discourse/discourse-characters-required
          - git clone https://github.com/discourse/discourse-push-notifications
          - git clone https://github.com/discourse/discourse-staff-alias
          - git clone https://github.com/discourse/discourse-translator
          - git clone https://github.com/discourse/discourse-yearly-review
          - git clone https://github.com/discourse/discourse-category-experts
          - git clone https://github.com/discourse/discourse-docs

  before_bundle_exec:
    - file:
        path: $home/config/multisite.yml
        contents: |
@OTHER_LANGUAGES@

  after_bundle_exec:
    - exec: cd /var/www/discourse && sudo -E -u discourse bundle exec rake multisite:migrate


## Any custom commands to run after building
run:
  - exec: echo "Beginning of custom commands"
  ## If you want to set the 'From' email address for your first registration, uncomment and change:
  ## After getting the first signup email, re-comment the line. It only needs to run once.
  #- exec: rails r "SiteSetting.notification_email='info@unconfigured.discourse.org'"
  - exec: echo "End of custom commands"
